
name: my-github-action  

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # <-- This gets your repo's files

      - name: Hello
        run: echo "ðŸ‘‹ Hello, World from GitHub Actions!"

      - name: My Name
        run: echo "ðŸ‘‹ My name is Raemond!"

  Trivy-check:
    runs-on: ubuntu-latest
    needs: compile

    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: |
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy
  
    - name: Trivy FS Scan
      run: trivy fs --format table -o fs-report.json .



  Gitleaks-check:
    runs-on: ubuntu-latest
    needs: Trivy-check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Gitleaks Installation
      run: sudo apt install gitleaks -y
    - name: Gitleaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json


  SonarCloud-check:
    runs-on: ubuntu-latest
    needs: Trivy-check  # optional if you have a compile step
 
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      id: setup-java
      uses: actions/setup-java@v4
      with:
          distribution: 'temurin'
          java-version: 17

    - name: Verify Java version
      run: java -version

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v2
      with:
          projectBaseDir: .
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # - name: Analyze with SonarQube
    #   uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
    #   env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
    #       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
    #   with:
    #       # Additional arguments for the sonarcloud scanner
    #       args:
    #         # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
    #         # mandatory
    #         -Dsonar.projectKey=${{ secrets.PROJECT_KEY }}
         


      # - name: Deploy to GCP VM
      #   run: |
      #   rsync  -auv  --exclude '.git*' ./ user@192.168.100.1:/var/www/html/staging_development/raemond/github-action
